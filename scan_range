import subprocess
import ipaddress

def nmap_scan():
    """
    Scanne un réseau à l'aide de nmap avec l'option -sn et retourne les adresses IP actives.
    Demande à l'utilisateur d'entrer l'adresse IP et le masque de sous-réseau du réseau à scanner.
    :return: Une liste contenant les adresses IP des hôtes qui ont répondu.
    """
    # Demander à l'utilisateur d'entrer l'adresse IP et le masque de sous-réseau
    ip_address = input("Entrez l'adresse IP du réseau à scanner : ")
    netmask = input("Entrez le masque de sous-réseau du réseau à scanner : ")

    # Calculer la plage d'adresses IP correspondant à l'adresse IP et au masque de sous-réseau spécifiés
    network = ipaddress.ip_network(ip_address + '/' + netmask, strict=False)

    # Exécuter la commande nmap pour scanner le réseau et récupérer les adresses IP actives
    command = ['nmap', '-sn', str(network)]
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output, error = process.communicate()

    if error:
        raise ValueError("Une erreur s'est produite lors de l'exécution de la commande nmap : {}".format(error.decode()))

    ip_list = []
    for line in output.decode('latin-1').split('\n'):
        if 'Nmap scan report for' in line:
            ip = line.split(' ')[4]
            ip_list.append(ip)

    return ip_list

# Exemple d'utilisation de la fonction nmap_scan
active_ips = nmap_scan()
print(active_ips)
